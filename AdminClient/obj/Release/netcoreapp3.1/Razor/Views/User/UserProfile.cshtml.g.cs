#pragma checksum "E:\Pravat Project\Yatris\AdminConsole\AdminClient\Views\User\UserProfile.cshtml" "{ff1816ec-aa5e-4d10-87f7-6f4963833460}" "b24da541c2d2d0606634d4adab3b0c44ea00551a"
// <auto-generated/>
#pragma warning disable 1591
[assembly: global::Microsoft.AspNetCore.Razor.Hosting.RazorCompiledItemAttribute(typeof(AspNetCore.Views_User_UserProfile), @"mvc.1.0.view", @"/Views/User/UserProfile.cshtml")]
namespace AspNetCore
{
    #line hidden
    using System;
    using System.Collections.Generic;
    using System.Linq;
    using System.Threading.Tasks;
    using Microsoft.AspNetCore.Mvc;
    using Microsoft.AspNetCore.Mvc.Rendering;
    using Microsoft.AspNetCore.Mvc.ViewFeatures;
#nullable restore
#line 1 "E:\Pravat Project\Yatris\AdminConsole\AdminClient\Views\User\UserProfile.cshtml"
using Microsoft.Extensions.Configuration;

#line default
#line hidden
#nullable disable
#nullable restore
#line 2 "E:\Pravat Project\Yatris\AdminConsole\AdminClient\Views\User\UserProfile.cshtml"
using Microsoft.AspNetCore.Http;

#line default
#line hidden
#nullable disable
    [global::Microsoft.AspNetCore.Razor.Hosting.RazorSourceChecksumAttribute(@"SHA1", @"b24da541c2d2d0606634d4adab3b0c44ea00551a", @"/Views/User/UserProfile.cshtml")]
    #nullable restore
    public class Views_User_UserProfile : global::Microsoft.AspNetCore.Mvc.Razor.RazorPage<dynamic>
    #nullable disable
    {
        #pragma warning disable 1998
        public async override global::System.Threading.Tasks.Task ExecuteAsync()
        {
            WriteLiteral("\r\n");
#nullable restore
#line 5 "E:\Pravat Project\Yatris\AdminConsole\AdminClient\Views\User\UserProfile.cshtml"
  
    ViewBag.Title = "User";
    string apiUrl = Configuration.GetValue<string>("WebAPIBaseUrl");

#line default
#line hidden
#nullable disable
            WriteLiteral(@"
<style>
    .userprofile .userpic {
    height: 280px;
    width: 280px;
    clear: both;
    margin: 0 auto;
    display: block;
    border-radius: 100%;
}

</style>
<div class=""page-header"">
    <ol class=""breadcrumb"">
        <li class=""breadcrumb-item""><a href=""#""><i class=""fe fe-file-text mr-1""></i> Admin Console</a></li>
        <li class=""breadcrumb-item active"" aria-current=""page"">User Profile</li>
    </ol> 
</div>
<div class=""row"">
    <div class=""col-lg-4"">
        <div class=""card"">
			<div class=""card-body"">
				<div class=""text-center"">
					<div class=""userprofile"">
						<div class=""userpic  brround""> <img");
            BeginWriteAttribute("src", " src=\"", 879, "\"", 885, 0);
            EndWriteAttribute();
            BeginWriteAttribute("alt", " alt=\"", 886, "\"", 892, 0);
            EndWriteAttribute();
            WriteLiteral(" id=\"profilePic\" class=\"userpicimg\"> </div>\r\n\t\t\t\t\t\t<h3 class=\"username text-dark mb-2\"><b>");
#nullable restore
#line 34 "E:\Pravat Project\Yatris\AdminConsole\AdminClient\Views\User\UserProfile.cshtml"
                                                          Write(Context.Session.GetString("FullName"));

#line default
#line hidden
#nullable disable
            WriteLiteral("</b></h3>\r\n\t\t\t\t\t\t<p class=\"mb-1 text-muted\">");
#nullable restore
#line 35 "E:\Pravat Project\Yatris\AdminConsole\AdminClient\Views\User\UserProfile.cshtml"
                                              Write(Context.Session.GetString("email"));

#line default
#line hidden
#nullable disable
            WriteLiteral(@"</p>
					</div>
				</div>
			</div>
		</div>
    </div>
    <div class=""col-lg-8"">

        <form action=""#"" role=""form"" class=""card validate"" id=""formPost"" enctype=""multipart/form-data"">
            <div class=""card-header"">
                <h3 class=""card-title"">User Profiles</h3>
            </div>
            <div class="" card-body"">

                <div class=""row"">
                    <div class=""col-lg-12"">
                        <div class=""row"">
                            <div class=""col-lg-6"">
                                <div class=""form-group"">
                                    <label class=""control-label"">Name<i class=""fas fa-exclamation-triangle text-danger fa-sm""></i></label>
                                    <input type=""text"" class=""form-control"" id=""name"" autocomplete=""off"" required />
                                </div>
                            </div>
                            <div class=""col-lg-6"">
                                <div class=""form");
            WriteLiteral(@"-group"">
                                    <label class=""control-label"">Mobile</label>
                                    <div class=""input-group mb-2"">
                                        <div class=""input-group-prepend"">
                                            <div class=""input-group-text""><i class=""fas fa-mobile-alt""></i></div>
                                        </div>
                                        <input type=""text"" class=""form-control"" id=""mobile"" autocomplete=""off"" />
                                    </div>
                                </div>
                            </div>

                        </div>
                        <div class=""row"">
                            <div class=""col-lg-6"">
                                <div class=""form-group"">
                                    <label class=""control-label"">Email</label>
                                    <div class=""input-group mb-2"">
                                        <div class=""input");
            WriteLiteral(@"-group-prepend"">
                                            <div class=""input-group-text""><i class=""fas fa-envelope""></i></div>
                                        </div>
                                        <input type=""email"" class=""form-control"" id=""email"" autocomplete=""off"" />
                                    </div>
                                </div>
                            </div>
                            <div class=""col-lg-6"">
                                <div class=""form-group"">
                                    <label class=""control-label"">Date of Birth</label>
                                    <div class=""input-group mb-2"">
                                        <div class=""input-group-prepend"">
                                            <div class=""input-group-text""><i class=""fas fa-calendar-alt""></i></div>
                                        </div>
                                        <input type=""text"" class=""form-control datepicker"" id=""dob"" auto");
            WriteLiteral(@"complete=""off"">
                                    </div>
                                </div>
                            </div>
                        </div>
                        <div class=""row"">
                            <div class=""col-lg-4"">
                                <div class=""form-group"">
                                    <label class=""control-label"">Profile picture</label>
                                    <div class=""custom-file mt-0"">
                                        <input type=""file"" class=""custom-file-input"" id=""pp"" name=""pp"">
                                        <label class=""custom-file-label"" for=""proPic"">Choose file</label>
                                    </div>
                                </div>
                            </div>
                        </div>
                        <div class=""row"">
                            <div class=""col-lg-6"">
                                <button type=""button"" id=""btnUpdate"" class=""btn btn-p");
            WriteLiteral("rimary\">Update</button>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n\r\n            </div>\r\n        </form>\r\n    </div>\r\n</div>\r\n\r\n\r\n\r\n");
            DefineSection("scripts", async() => {
                WriteLiteral(@"
    <script>
        var imgPath;

        $("".custom-file-input"").on(""change"", function () {
            var fileName = $(this).val().split(""\\"").pop();
            if (checkImageFormat(fileName)) {
                $(this).siblings("".custom-file-label"").addClass(""selected"").html(fileName);
            } else {
                sweetAlert(""Validation Alert!"", ""Upload Image file only!"", ""warning"");
                resetInputFile('#formPost');
            }

        });

        $(function () {
            loadSingleUser();
        });


        $(""#btnUpdate"").click(function (e) {
                if (!document.getElementById(""formPost"").checkValidity()) {
                    e.preventDefault();
                } else {
                    imgPath = '';
                    var currentImageSrc = '';
                    currentImageSrc = $('#profilePic').attr('src');

                    if ($('.custom-file-label').text() != '' && $('.custom-file-label').text() !='Choose file') {
    ");
                WriteLiteral("                    uploadFile();\r\n                    } else if (currentImageSrc!=\'\') {\r\n                        imgPath = currentImageSrc;\r\n                    }\r\n                    var model = {\r\n                        userId: ");
#nullable restore
#line 155 "E:\Pravat Project\Yatris\AdminConsole\AdminClient\Views\User\UserProfile.cshtml"
                           Write(Context.Session.GetInt32("UserId"));

#line default
#line hidden
#nullable disable
                WriteLiteral(@",                        
                        fullName: $.trim($(""#name"").val()),
                        mobile: $.trim($(""#mobile"").val()),
                        email: $.trim($(""#email"").val()),
                        dateOfBirth: $.trim($(""#dob"").val()) == '' ? null : $.trim($(""#dob"").val().replace(/\//g, '-')),
                        imagePath: imgPath,
                        lastUpdatedBy:");
#nullable restore
#line 161 "E:\Pravat Project\Yatris\AdminConsole\AdminClient\Views\User\UserProfile.cshtml"
                                 Write(Context.Session.GetInt32("UserId"));

#line default
#line hidden
#nullable disable
                WriteLiteral(",\r\n                    }\r\n                    console.log(model);\r\n                    $.ajax({\r\n                        type: \"POST\",\r\n                        url: \"");
#nullable restore
#line 166 "E:\Pravat Project\Yatris\AdminConsole\AdminClient\Views\User\UserProfile.cshtml"
                         Write(apiUrl);

#line default
#line hidden
#nullable disable
                WriteLiteral("/api/Users/UpdateUserProfile\",\r\n                        data: JSON.stringify(model),\r\n                        contentType: \"application/json; charset=utf-8\",\r\n                        headers: {\r\n                            \"authorization\": \"Bearer ");
#nullable restore
#line 170 "E:\Pravat Project\Yatris\AdminConsole\AdminClient\Views\User\UserProfile.cshtml"
                                                Write(Context.Session.GetString("TokenTxt"));

#line default
#line hidden
#nullable disable
                WriteLiteral(@"""
                        },
                        dataType: ""json"",
                        success: function (data, statusText, xhr) {
                            if (xhr.status==200) {                               
                                    sweetAlert({
                                        html: true,
                                        title: ""User"",
                                        text: ""Successfully updated!"",
                                        type: ""success""
                                    });
                            } else {
                                sweetAlert(""Validation Alert!"", ""Something unexpected!"", ""warning"");
                            }
                        },
                        error: function (data) {
                            if (data.status == 401) {
                                window.location.replace('/Message/TokenExpire');
                            } else if (data.status == 403) {
                     ");
                WriteLiteral(@"           window.location.replace('/Message/Unauthorize');
                            } else if (data.status == 400) {
                                sweetAlert(""Validation Alert!"", ""Please check input data!"", ""warning"");
                            }
                        }
                    });
                }
        });


        function loadSingleUser() {

            $.ajax({
                type: ""GET"",
                url: """);
#nullable restore
#line 203 "E:\Pravat Project\Yatris\AdminConsole\AdminClient\Views\User\UserProfile.cshtml"
                 Write(apiUrl);

#line default
#line hidden
#nullable disable
                WriteLiteral("/api/Users/GetSingleUser/\" + ");
#nullable restore
#line 203 "E:\Pravat Project\Yatris\AdminConsole\AdminClient\Views\User\UserProfile.cshtml"
                                                     Write(Context.Session.GetInt32("UserId"));

#line default
#line hidden
#nullable disable
                WriteLiteral(",\r\n                contentType: \"application/json; charset=utf-8\",\r\n                headers: {\r\n                            \"authorization\": \"Bearer ");
#nullable restore
#line 206 "E:\Pravat Project\Yatris\AdminConsole\AdminClient\Views\User\UserProfile.cshtml"
                                                Write(Context.Session.GetString("TokenTxt"));

#line default
#line hidden
#nullable disable
                WriteLiteral(@"""
                },
                dataType: ""json"",
                success: function (data) {
                    console.log(data);
                    if (data) {
                        $('#name').val(data.fullName);
                        $('#mobile').val(data.mobile);
                        $('#email').val(data.email);
                        if (data.dateOfBirth != null) {
                            var dateVal = data.dateOfBirth.substring(0, 10);
                            $('#dob').datepicker('setDate', new Date(dateVal.replace(/\-/g, '/')));
                        }                       
                        $('#profilePic').attr('src', data.imagePath);
                    } else {
                        sweetAlert(""Validation Alert!"", ""Something unexpected!"", ""warning"");
                    }
                },
                error: function (data) {
                    if (data.status == 401) {
                        window.location.replace('/Message/TokenExpire'");
                WriteLiteral(@");
                    } else if (data.status == 403) {
                        window.location.replace('/Message/Unauthorize');
                    }
                }
            });
        }

        function uploadFile() {
            var totalFiles = document.getElementById('pp').files.length;
            if (totalFiles > 0) {
                var formData = new FormData();
                var files = document.getElementById('pp').files;
                formData.append(""file"", files[0]);
                $.ajax(
                    {
                        url: ""/Upload/ImgUpload"",
                        data: formData,
                        processData: false,
                        contentType: false,
                        async: false,
                        type: ""POST"",
                        success: function (data) {
                            imgPath = data;
                            $('#profilePic').attr('src', imgPath);
                            resetInputF");
                WriteLiteral("ile(\'#formPost\');\r\n                        }\r\n                    }\r\n                );\r\n            }\r\n\r\n        }\r\n    </script>\r\n");
            }
            );
        }
        #pragma warning restore 1998
        #nullable restore
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public IConfiguration Configuration { get; private set; } = default!;
        #nullable disable
        #nullable restore
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.ViewFeatures.IModelExpressionProvider ModelExpressionProvider { get; private set; } = default!;
        #nullable disable
        #nullable restore
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.IUrlHelper Url { get; private set; } = default!;
        #nullable disable
        #nullable restore
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.IViewComponentHelper Component { get; private set; } = default!;
        #nullable disable
        #nullable restore
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.Rendering.IJsonHelper Json { get; private set; } = default!;
        #nullable disable
        #nullable restore
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.Rendering.IHtmlHelper<dynamic> Html { get; private set; } = default!;
        #nullable disable
    }
}
#pragma warning restore 1591
